name: Docker Image Build and Push (Web)

on:
    workflow_call:
        inputs:
            image_prefix:
                description: "Container registry prefix (e.g., ghcr.io)"
                required: true
                type: string
            org_name:
                description: "Organization name"
                required: true
                type: string
            app_name:
                description: "Application name"
                required: true
                type: string
            build_context:
                description: "Directory containing the Dockerfile"
                required: true
                type: string
        outputs:
            image_tag:
                description: "The full image tag that was built and pushed"
                value: ${{ jobs.build-and-push.outputs.image_tag }}

jobs:
    build-and-push:
        name: "Build & Publish Image"
        runs-on: ubuntu-latest
        outputs:
            image_tag: ${{ steps.build_and_upload.outputs.image_tag }}
        steps:
            - name: "☁️ Checkout code"
              uses: actions/checkout@v4
              with:
                  path: ./src

            - name: "Log in to the Container registry"
              uses: docker/login-action@v3
              with:
                  registry: ${{ inputs.image_prefix }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: "📦 ${{ inputs.app_name }} - Build and upload container image"
              id: build_and_upload
              env:
                  ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  cd ./src

                  if [ "${{ github.event_name }}" == "release" ]; then
                    git_hash=$(git rev-parse --short "$GITHUB_SHA")
                    TAG="${GITHUB_REF##*/}"
                  else
                    git_hash=$(git rev-parse --short "$GITHUB_SHA")
                    TAG="${GITHUB_REF##*/}-${git_hash}"
                  fi

                  cd ./${{ inputs.build_context }}

                  BASE_IMAGE_TAG="${{ inputs.image_prefix }}/${{ inputs.org_name }}/${{ inputs.app_name }}"
                  IMAGE_TAG="${BASE_IMAGE_TAG}:${TAG}"
                  echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

                  export IMAGE_TAG=${IMAGE_TAG}
                  export DOCKER_BUILDKIT=1

                  docker build . --secret id=ACCESS_TOKEN,env=ACCESS_TOKEN --build-arg PUBLIC_STATIC_BUILD_VERSION=${TAG} --build-arg REVISION=${TAG} -t ${IMAGE_TAG}
                  docker push ${IMAGE_TAG}

                  if [ "${{ github.event_name }}" == "release" ]; then
                    ## Extra "latest" Tag
                    docker tag ${IMAGE_TAG} ${BASE_IMAGE_TAG}:latest
                    docker push ${BASE_IMAGE_TAG}:latest
                  else
                    ## Extra "latest-dev" Tag
                    docker tag ${IMAGE_TAG} ${BASE_IMAGE_TAG}:latest-dev
                    docker push ${BASE_IMAGE_TAG}:latest-dev
                  fi
